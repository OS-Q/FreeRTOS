/*
*********************************************************************************************************
*
*	版    本 : V1.0
*	说    明 : 本实验主要学习FreeRTOS的临界区和开关中断设置
*              实验目的：
*                1. 学习FreeRTOS的临界区和开关中断设置
*              实验内容：
*                2. 按下按键K1可以通过串口打印任务执行情况
*                   任务名      任务状态 优先级   剩余栈 任务序号
*                   vTaskUserIF     R       1       343     1
*                   IDLE            R       0       116     5
*                   vTaskLED        B       2       475     2
*                   vTaskMsgPro     B       3       476     3
*                   vTaskStart      B       4       490     4
*
*                   任务名       运行计数         使用率
*                   vTaskUserIF     2               <1%
*                   IDLE            24016           99%
*                   vTaskMsgPro     9               <1%
*                   vTaskStart      124             <1%
*                   vTaskLED        9               <1%
*                   串口软件建议使用SecureCRT（V4光盘里面有此软件）查看打印信息。
*                    vTaskTaskUserIF 任务：按键消息处理
*                    vTaskLED 任务       ：LED闪烁，串口打印
*                    vTaskMsgPro 任务    ：LED闪烁，串口打印
*                    vTaskStart 任务     ：按键扫描
*                 3. 任务运行转态的定义如下，跟上面串口打印字母B, R, D, S对应：
*                    #define tskBLOCKED_CHAR		( 'B' )
*                    #define tskREADY_CHAR		    ( 'R' )
*                    #define tskDELETED_CHAR		( 'D' )
*                    #define tskSUSPENDED_CHAR	    ( 'S' )
*                 4. 临界区解释：
*					 代码的临界短也称为临界区，指处理时不可分割的代码。一旦这部分代码开始执行，则不允许
*                    任何中断打入。为确保临界段代码的执行不被中断，在进入临界段之前必须关中断，而临界段
*                    代码执行完后，要立即开中断。
*                 5. （1）本实验通过如下两个函数实现进入临界段和推出临界段				
*					      taskENTER_CRITICAL();    进入临界区 
*					        临界区代码
*					      taskEXIT_CRITICAL();     推出临界区
*
*                    （2）通过如下两个函数实现开关中断，注意，关闭了中断也就关闭了任务的调度：
*		                  taskDISABLE_INTERRUPTS();  关闭中断 
*						    防止被中断打断的代码
*                         taskENABLE_INTERRUPTS();  打开中断 
*                     
*                    （3）临界区设置和开关中断的区别。
*                         临界区设置里面也有开关中断操作的，并且支持开关中断的嵌套使用，而单纯的开关
*                         中断操作是不能够嵌套使用的，比如下面：
*                         void FunctionA()
*                         {
*	                          taskDISABLE_INTERRUPTS();  关闭中断 
*	                          FunctionB(); 调用函数B
*	                          FunctionC(); 调用函数C
*	                          taskENABLE_INTERRUPTS();  打开中断
*                         }
*
*                         void FunctionB()
*                         {
*	                          taskDISABLE_INTERRUPTS();  关闭中断 
*	                          代码
*	                          taskENABLE_INTERRUPTS();  打开中断
*                         }
*                        工程中调用了FunctionA就会出现执行完FunctionB后中断被打开的情况，此时
*                        FunctionC将不被保护了。 
*                 6. 本实验通过临界区设置和开关中断的功能，实现printf函数的多任务调用。
*
*              注意事项：
*                 1. 本实验推荐使用串口软件SecureCRT，要不串口打印效果不整齐。此软件在
*                    V4开发板光盘里面有。
*                 2. 务必将编辑器的缩进参数和TAB设置为4来阅读本文件，要不代码显示不整齐。
*
*	修改记录 :
*		版本号    日期         作者            说明
*       V1.0    2015-08-19   Eric2013    1. ST固件库到V3.6.1版本
*                                        2. BSP驱动包V1.2
*                                        3. FreeRTOS版本V8.2.2
*
*	Copyright (C), 2015-2020, 安富莱电子 www.armfly.com
*
*********************************************************************************************************
*/